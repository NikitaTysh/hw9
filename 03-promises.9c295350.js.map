{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SACAD,EAAAE,OAAOC,QAAQ,UACfC,QAAQC,IAAI,MACZ,IAAMC,EAAMC,SAASC,cAAc,gBAC7BC,EAASF,SAASC,cAAc,8BAChCE,EAAOH,SAASC,cAAc,4BAC9BG,EAAaJ,SAASC,cAAc,6BAW1C,SAASI,EAAcC,EAAUC,GAW/B,OAVgB,IAAIC,SAAQ,SAACC,EAAKC,GAChC,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAIhB,EAAAE,OAAOC,QAAQ,uBAAwCmB,OAAfT,EAAS,QAAYS,OAANR,EAAM,QAE/DG,EAAEjB,EAAAE,OAAOqB,QAAQ,sBAAqCD,OAAfT,EAAS,QAAYS,OAANR,EAAM,O,GAE/DA,E,IAnBPR,EAAIkB,iBAAiB,SACrB,SAAiBC,GACf,IAAIC,GAASf,EAAWgB,MACxBF,EAAEG,iBACF,IAAK,IAAIC,EAAI,EAAGA,GAAKpB,EAAOkB,MAAOE,GAAK,EACtCjB,EAAciB,EAAI,EAAGH,GACrBA,IAAUhB,EAAKiB,MACfvB,QAAQC,IAAIqB,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix';\nNotify.success('lib ok');\nconsole.log('ok');\nconst btn = document.querySelector('.form button');\nconst amount = document.querySelector('.form input[name=\"amount\"]');\nconst step = document.querySelector('.form input[name=\"step\"]');\nconst firstDelay = document.querySelector('.form input[name=\"delay\"]');\nbtn.addEventListener('click', onClick);\nfunction onClick(e) {\n  let count = +firstDelay.value;\n  e.preventDefault();\n  for (let i = 0; i < +amount.value; i += 1) {\n    createPromise(i + 1, count);\n    count += +step.value;\n    console.log(count);\n  }\n}\nfunction createPromise(position, delay) {\n  const promise = new Promise((res, rej) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        res(Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`));\n      } else {\n        rej(Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`));\n      }\n    }, delay);\n  });\n  return promise;\n}\n"],"names":["$iU1Pc","parcelRequire","Notify","success","console","log","$ce04d3a99e08e73b$var$btn","document","querySelector","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$firstDelay","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","res","rej","shouldResolve","Math","random","setTimeout","concat","failure","addEventListener","e","count","value","preventDefault","i"],"version":3,"file":"03-promises.9c295350.js.map"}